rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // User document - users can read/update their own user doc
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow update: if isOwner(userId);
      allow create: if isOwner(userId);
    }
    
    // User recipes - users can only access their own recipes
    match /users/{userId}/recipes/{recipeId} {
      allow read: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId) && request.resource.data.userId == userId;
      allow update: if isOwner(userId) && resource.data.userId == userId;
      allow delete: if isOwner(userId) && resource.data.userId == userId;
    }
    
    // Config collection - read-only for authenticated users (for early bird counter)
    match /config/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only server-side can write
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

