{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Elixiary AI Assistant app.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "createdAt"
      ]
    },
    "Ingredient": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Ingredient",
      "type": "object",
      "description": "Represents an ingredient available to the user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Ingredient entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the ingredient (e.g., Gin, Lemon Juice)."
        },
        "description": {
          "type": "string",
          "description": "Optional description of the ingredient."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "CocktailRecipe": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CocktailRecipe",
      "type": "object",
      "description": "Represents a cocktail recipe generated by the AI.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CocktailRecipe entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the cocktail recipe."
        },
        "instructions": {
          "type": "string",
          "description": "Detailed instructions for making the cocktail."
        },
        "garnish": {
          "type": "string",
          "description": "Suggested garnish for the cocktail."
        },
        "mood": {
          "type": "string",
          "description": "The mood or occasion this cocktail is suited for."
        },
        "flavorProfile": {
          "type": "string",
          "description": "Flavor profile of the cocktail (e.g., sweet, tart, smoky)."
        },
        "ingredientIds": {
          "type": "array",
          "description": "References to Ingredients. (Relationship: CocktailRecipe N:N Ingredient)",
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N CocktailRecipe)"
        }
      },
      "required": [
        "id",
        "name",
        "instructions",
        "ingredientIds",
        "userId"
      ]
    },
    "UserIngredient": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserIngredient",
      "type": "object",
      "description": "Represents the ingredients a user has available.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the UserIngredient entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N UserIngredient)"
        },
        "ingredientId": {
          "type": "string",
          "description": "Reference to Ingredient. (Relationship: Ingredient 1:N UserIngredient)"
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the ingredient the user has."
        },
        "unit": {
          "type": "string",
          "description": "The unit of measure for the ingredient (e.g., oz, ml)."
        }
      },
      "required": [
        "id",
        "userId",
        "ingredientId"
      ]
    }
  },
  "auth": {
    "providers": [
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. User ID is used as the document ID.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/ingredients/{userIngredientId}",
        "definition": {
          "entityName": "UserIngredient",
          "schema": {
            "$ref": "#/backend/entities/UserIngredient"
          },
          "description": "Stores the ingredients that a user has. Uses path-based ownership, enabling rules to check request.auth.uid == userId.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "userIngredientId",
              "description": "The unique identifier of the user ingredient."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/recipes/{recipeId}",
        "definition": {
          "entityName": "CocktailRecipe",
          "schema": {
            "$ref": "#/backend/entities/CocktailRecipe"
          },
          "description": "Stores cocktail recipes created by a user. Uses path-based ownership, enabling rules to check request.auth.uid == userId.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "recipeId",
              "description": "The unique identifier of the cocktail recipe."
            }
          ]
        }
      },
      {
        "path": "/ingredients/{ingredientId}",
        "definition": {
          "entityName": "Ingredient",
          "schema": {
            "$ref": "#/backend/entities/Ingredient"
          },
          "description": "Stores global ingredients available to all users.",
          "params": [
            {
              "name": "ingredientId",
              "description": "The unique identifier of the ingredient."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to provide a secure and scalable data model for the Elixiary AI Assistant application, adhering to the principles of Authorization Independence, Clarity of Intent, DBAC (Database-Based Access Control), and QAPs (Rules are not Filters). \n\nAuthorization Independence is achieved by using path-based ownership for user-specific data (recipes and ingredients) and avoiding `get()` calls in security rules. All security rules will rely on `request.auth.uid`.\n\nStructural Segregation is used by separating user-specific data into subcollections under the `/users/{userId}` path. This ensures that each collection has a homogeneous security posture.\n\nAccess Modeling leverages path-based ownership for recipes and user ingredients, facilitating straightforward security rules. The structure supports the integrity of ownership and related data.\n\nQAPs are supported by ensuring that list operations can be secured using path-based ownership. This prevents filtering data based on rules, ensuring predictable and secure data access."
  }
}